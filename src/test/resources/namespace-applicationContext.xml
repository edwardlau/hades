<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dao="http://www.synyx.de/schema/dao"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.synyx.de/schema/dao http://www.synyx.de/schema/dao/dao-config.xsd">

	<import resource="infrastructure.xml" />
	
	<!-- 
	
	Simplified DAO configuration:
	
	1. Looks for DAO interfaces in ${dao-config.dao-package-name} named ${dao.name}Dao
	2. Uses entity classes from ${dao-config.entity-package-name}
	3. Registers daos under ${dao.name}Dao in the applicationContext
	4. Add postfix attributes to dao-config element as needed
	
	You can register DAOs as needed by simply adding "dao" elements named after domain classes
	and provide an DAO interface named as described above. 
	
	! Note, that PersistenceAnnotationBeanPostProcessor and PersistenceExceptionTranslationPostProcessor !
	! do not have to be explicitly registered as they are included by namespace parser                   !
	
	-->
	<dao:dao-config 
		entity-package-name="com.synyx.jpa.support.test.domain" 
		dao-package-name="com.synyx.jpa.support.test.dao" >
		
		<dao:dao name="person" />
	</dao:dao-config>
	
</beans>
