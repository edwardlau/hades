<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   
	<extension point="org.eclipse.wst.xml.core.catalogContributions">
	 <catalogContribution>
	  <public 
	  	publicId="http://schemas.synyx.org/hades"
	    uri="jar:hades-0.4-SNAPSHOT.jar!/org/synyx/hades/dao/config/hades.xsd"
	    webURL="http://schemas.synyx.org/hades/hades.xsd" />
	  <system
	    systemId="http://schemas.synyx.org/hades/hades.xsd"
	    uri="jar:hades-0.4-SNAPSHOT.jar!/org/synyx/hades/dao/config/hades.xsd" />
	 </catalogContribution>
	</extension>
	
<extension
 point="org.springframework.ide.eclipse.beans.core.namespaces">
 <namespace
       namespaceHandler="org.synyx.hades.dao.config.DaoNameSpaceHandler"
       uri="http://schemas.synyx.org/hades"/>
</extension>


<extension point="org.springframework.ide.eclipse.beans.ui.namespaces">
  <namespace
        contentProvider="org.synyx.hades.eclipse.beans.ui.HadesNamespaceContentProvider"
        defaultSchemaLocation="http://schemas.synyx.org/hades/hades.xsd"
        labelProvider="org.synyx.hades.eclipse.beans.ui.HadesNamespaceLabelProvider"
        prefix="hades"
        uri="http://schemas.synyx.org/hades"/>
</extension>


	<extension  point="org.springframework.ide.eclipse.beans.ui.editor.namespaces">
	 <namespace
        contentAssistProcessor="org.synyx.hades.eclipse.beans.ui.editor.HadesContentAssistProcessor"
        elementLocator="org.synyx.hades.eclipse.beans.ui.editor.HadesReferenceableElementLocator"
        labelProvider="org.synyx.hades.eclipse.HadesOutlineLabelProvider"
        name="Hades Config"
        uri="http://schemas.synyx.org/hades"/>
	</extension>
	
	<extension
         point="org.eclipse.ui.decorators">
      <decorator
            lightweight="true"
            adaptable="false"
            location="TOP_RIGHT"
            label="%decorator.label"
            state="true"
            class="org.synyx.hades.eclipse.beans.ui.HadesModelLabelDecorator"
            id="org.synyx.hades.eclipse.beans.ui.hadesModelLabelDecorator">
         <description>
            %decorator.description
         </description>
         <enablement>
            <or>
               <objectClass name="org.eclipse.core.resources.IFolder"/>
               <objectClass name="org.eclipse.core.resources.IFile"/>
               <objectClass name="org.eclipse.jdt.core.IJavaElement"/>
               <objectClass name="org.springframework.ide.eclipse.beans.core.model.IBeansModelElement"/>
            </or>
         </enablement>
      </decorator>
   </extension>
   
   <extension
         point="org.eclipse.ui.navigator.navigatorContent">
      <navigatorContent
            id="org.synyx.hades.eclipse.beans.ui.navigator.hadesExplorerContent"
            name="%navigatorContentName"
            contentProvider="org.synyx.hades.eclipse.beans.ui.HadesNavigatorContentProvider"
            labelProvider="org.springframework.ide.eclipse.beans.ui.navigator.BeansNavigatorLabelProvider"
            icon="icons/full/obj16/bean_obj.gif"
            activeByDefault="true">
		 <triggerPoints>
			<or>
				<and>
					<instanceof value="org.eclipse.core.resources.IFile"/>
					<test property="org.springframework.ide.eclipse.beans.core.model.isBeansConfig"/>
				</and>
				<instanceof value="org.springframework.ide.eclipse.core.model.ISpringProject"/>
				<instanceof value="org.springframework.ide.eclipse.core.io.ZipEntryStorage"/>
				<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBeansModelElement"/>
			</or>
		 </triggerPoints>
         <possibleChildren>
			<or>
				<instanceof value="org.eclipse.core.resources.IResource"/>
				<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBeansModelElement"/>
				<instanceof value="org.eclipse.jdt.core.IJavaElement"/>
				<instanceof value="org.springframework.ide.eclipse.beans.ui.model.metadata.BeanMetadataNode"/>
				<instanceof value="org.springframework.ide.eclipse.beans.core.model.metadata.IBeanMetadata"/>
			</or>
         </possibleChildren>
         <commonSorter
               id="org.synyx.hades.eclipse.beans.ui.navigator.hadesExplorerSorter"
               class="org.springframework.ide.eclipse.beans.ui.navigator.BeansNavigatorSorter"/>
         <actionProvider
             id="org.synyx.hades.eclipse.beans.ui.navigator.hadesExplorerActions"
             class="org.springframework.ide.eclipse.beans.ui.navigator.BeansNavigatorActionProvider">
	         <enablement>
				<or>
					<and>
						<instanceof value="org.eclipse.core.resources.IFile"/>
						<test property="org.springframework.ide.eclipse.beans.core.model.isBeansConfig"/>
					</and>
					<instanceof value="org.springframework.ide.eclipse.core.io.ZipEntryStorage"/>
					<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBeansModelElement"/>
					<instanceof value="org.springframework.ide.eclipse.beans.ui.model.metadata.BeanMetadataNode"/>
					<instanceof value="org.springframework.ide.eclipse.beans.core.model.metadata.IBeanMetadata"/>
	            </or>
	         </enablement>
         </actionProvider>
         <dropAssistant
               class="org.springframework.ide.eclipse.beans.ui.navigator.BeansNavigatorDropAdapter"
               id="org.synyx.hades.eclipse.beans.ui.navigator.hadesExplorerContent.dropAssistent">
            <possibleDropTargets>
            	<or>
            		<!-- drop to config sets -> node: '<config set name>' -->
					<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBeansConfigSet"/>
            		<!-- drop to beans project -> node: 'beans' -->
					<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBeansProject"/>
            		<!-- drop to spring config -> node: '<project name>' -->
					<instanceof value="org.springframework.ide.eclipse.core.model.ISpringProject"/>
            		<!-- drop to empty space -->
					<instanceof value="org.eclipse.core.resources.IWorkspaceRoot"/>
				</or>
            </possibleDropTargets>
         </dropAssistant>
      </navigatorContent>

      <navigatorContent
            id="org.springframework.ide.eclipse.beans.ui.navigator.projectExplorerContent"
            name="%navigatorContentName"
            contentProvider="org.synyx.hades.eclipse.beans.ui.HadesNavigatorContentProvider"
            labelProvider="org.springframework.ide.eclipse.beans.ui.navigator.BeansNavigatorLabelProvider"
            icon="icons/full/obj16/bean_obj.gif"
            activeByDefault="true"
            priority="highest">	<!-- we need to outrule the other navigators here to get the IFiles labeled -->
		<triggerPoints>
			<or>
				<and>
					<instanceof value="org.eclipse.core.resources.IFile"/>
					<test property="org.springframework.ide.eclipse.beans.core.model.isBeansConfig"/>
				</and>
				<instanceof value="org.springframework.ide.eclipse.core.model.ISpringProject"/>
				<instanceof value="org.springframework.ide.eclipse.core.io.ZipEntryStorage"/>
				<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBeansModelElement"/>
				<instanceof value="org.eclipse.jdt.core.IType"/>
				<instanceof value="org.springframework.ide.eclipse.beans.ui.model.metadata.BeanMetadataNode"/>
				<instanceof value="org.springframework.ide.eclipse.beans.core.model.metadata.IBeanMetadata"/>
			</or>
		 </triggerPoints>
         <possibleChildren>
			<or>
				<and>
					<instanceof value="org.eclipse.core.resources.IFile"/>
					<test property="org.springframework.ide.eclipse.beans.core.model.isBeansConfig"/>
				</and>
				<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBeansModelElement"/>
				<instanceof value="org.springframework.ide.eclipse.beans.ui.model.metadata.BeanMetadataNode"/>
				<instanceof value="org.springframework.ide.eclipse.beans.core.model.metadata.IBeanMetadata"/>
			</or>
         </possibleChildren>
         <commonSorter
               id="org.synyx.hades.eclipse.beans.ui.navigator.sorter.projectExplorerSorter"
               class="org.springframework.ide.eclipse.beans.ui.navigator.BeansNavigatorSorter"/>
         <actionProvider
             id="org.synyx.hades.eclipse.beans.ui.navigator.projectExplorerActions"
             class="org.springframework.ide.eclipse.beans.ui.navigator.BeansNavigatorActionProvider">
	         <enablement>
				<or>
					<and>
						<instanceof value="org.eclipse.core.resources.IFile"/>
						<test property="org.springframework.ide.eclipse.beans.core.model.isBeansConfig"/>
					</and>
					<instanceof value="org.springframework.ide.eclipse.core.io.ZipEntryStorage"/>
					<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBeansModelElement"/>
					<instanceof value="org.springframework.ide.eclipse.beans.ui.model.metadata.BeanMetadataNode"/>
					<instanceof value="org.springframework.ide.eclipse.beans.core.model.metadata.IBeanMetadata"/>
	            </or>
	         </enablement>
         </actionProvider>
      </navigatorContent>

      <commonFilter
            id="org.synyx.hades.eclipse.beans.ui.navigator.filters.hideNonSpringProjects"
            name="%navigatorfilterHideNonSpringProjectsName"
            description="%navigatorfilterHideNonSpringProjectsDescription"
            class="org.springframework.ide.eclipse.beans.ui.navigator.filters.NonSpringProjectFilter"
            activeByDefault="false"/>
      <commonFilter
            id="org.synyx.hades.eclipse.beans.ui.navigator.filters.hideBeanClassReferences"
            name="%navigatorfilterHideBeanClassReferencesName"
            description="%navigatorfilterHideBeanClassReferencesDescription"
            activeByDefault="false">
				<filterExpression>
					<instanceof value="org.springframework.ide.eclipse.beans.core.internal.model.BeanClassReferences"/>
				</filterExpression>
      </commonFilter>
      <commonFilter
            id="org.springframework.ide.eclipse.beans.ui.navigator.filters.hideBeansConfigSets"
            name="%navigatorfilterHideBeansConfigSetsName"
            description="%navigatorfilterHideBeansConfigSetsDescription"
            activeByDefault="false">
				<filterExpression>
					<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBeansConfigSet"/>
				</filterExpression>
      </commonFilter>
      <commonFilter
            id="org.springframework.ide.eclipse.beans.ui.navigator.filters.hideInfrstructureBean"
            name="%navigatorfilterHideInfrstructureBeanName"
            description="%navigatorfilterHideInfrstructureBeanDescription"
            activeByDefault="true">
				<filterExpression>
					<and>
						<instanceof value="org.springframework.ide.eclipse.beans.core.model.IBean"/>
						<test property="org.springframework.ide.eclipse.beans.core.model.isInfrstructureBean"/>
					</and>
				</filterExpression>
      </commonFilter>
   </extension>

</plugin>
